@page
@using HandelsRaketten.Services.AdServices
@using Newtonsoft.Json
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
@{
    Layout = "_NoNavbarLayout";
}

@* @if (Model._signInManager.IsSignedIn(User))
{
    <p>DU ER LOGGET IND DIT FEDE LÆS LORT!</p>
}
@if (!Model._signInManager.IsSignedIn(User))
{
    <p>DU ER IKKE LOGGET IND DIT FEDE LÆS SVINEFODDER!</p>
} *@

@* <div class="text-white">
    @if (Model._signInManager.IsSignedIn(User))
    {
        if (Model.IsAdmin)
        {
            <p>DU ER ADMIN!</p>
        }
        else
        {
            <p>DU ER IKKE ADMIN DIN PISPOT!</p>
        }
    }
</div> *@

<div class="main_div" style="margin-top:65px;">
    <div id="navigation_div">
        <div id="navigation_div_navbar">
            <div class="logo-container">
                 <img src="https://i.pinimg.com/736x/89/7e/5f/897e5f35da967be1ae2e8e3f37767757.jpg" alt="Logo"> <span style="color: white;">HandelsRaketten</span>
            </div>
            <div class="nav-buttons">
                @if (!Model._signInManager.IsSignedIn(User))
                {
                    <a href="Identity/Account/Register" class="login">Registrer</a>
                    <a href="Identity/Account/Login" class="create-ad">Opret annonce</a>
                    <a href="Identity/Account/Login" class="login">Login</a>
                }
                else if (Model._signInManager.IsSignedIn(User))
                {
                    if (Model.IsAdmin)
                    {
                        <a class="login">Role: Admin</a>
                    }
                    <a asp-page="AdPages/PersonalAds" class="login nav-link text-light">Mine Annoncer</a>
                    <a class="login nav-link text-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Min Profil</a>
                    <a href="AdPages/CreateAd" class="create-ad">Opret annonce</a>
                    <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post">
                        <button type="submit" class="login nav-link btn btn-link text-light">Logout</button>
                    </form>



                }
            </div>
        </div>
        <div class="search-bar">
            <form method="post" class="form-inline">
                <div class="input-group mb-3">
                    <input asp-for="SearchString" class="form-control mr-1" placeholder="Find Plante" />
                    <button type="submit" asp-page-handler="NameSearch" value="Search" class="btn btn-primary" />Søg</button>
                </div>
            </form>
            <br />
            @if(Model.IsAdmin)
            {
                <a href="AdPages/ShowAllAds" class="show-ads">Vis Alle Annoncer</a>
            }
        </div>
    </div>

    <div id="category_navbar">
        <ul>
            <li><a asp-page="PageContext" asp-route-category="Plants">Alle Planter</a></li>
            <li><a asp-page="PageContext" asp-route-category="IndoorPlant">Indendørs Planter</a></li>
            <li><a asp-page="PageContext" asp-route-category="OutdoorPlant">Udendørs Planter</a></li>
            <!-- Add more list items for additional categories -->
        </ul>
    </div>

    <div id="highlighted_ads">
        <h2>Highlighted Ads</h2>
        <div id="ads_container">
            <ul id="ads_list">
                <!-- Ads will be dynamically added here -->
            </ul>
        </div>
    </div>


</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Serialize Model.Ads into a JSON array
        var adsData = @Html.Raw(JsonConvert.SerializeObject(Model.Ads)) || [];

        // Function to randomly pick ads
        function getRandomAds(numAds) {
            if (adsData.length === 0) {
                console.error("No ads available to display.");
                return [];
            }

            // Fisher-Yates shuffle algorithm to get a random selection
            for (let i = adsData.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [adsData[i], adsData[j]] = [adsData[j], adsData[i]];
            }

            return adsData.slice(0, numAds);
        }

        // Function to display ads in the UI
        function displayAds() {
            const adsList = document.getElementById("ads_list");
            if (!adsList) {
                console.error("Ads list element not found.");
                return;
            }

            adsList.innerHTML = ""; // Clear previous ads

            const numAdsToShow = 3; // Number of ads to display
            const randomAds = getRandomAds(numAdsToShow);

            randomAds.forEach(ad => {
                const li = document.createElement("li");
                li.classList.add("ad");

                if (ad.image && ad.title && ad.description && ad.price) {
                    li.innerHTML = `
                                <img src="${ad.image}" alt="${ad.title}">
                                <h3>${ad.title}</h3>
                                <p>${ad.description}</p>
                                <p class="price">${ad.price}</p>
                            `;
                } else {
                    console.error("Ad data is missing required fields:", ad);
                }

                adsList.appendChild(li);
            });
        }

        displayAds();
    });
</script>